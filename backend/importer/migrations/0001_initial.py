# Generated by Django 2.2.9 on 2020-02-01 11:43

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ForHireVehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified date')),
                ('raw_hash', models.CharField(db_index=True, editable=False, max_length=32)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Raw data')),
                ('active', models.CharField(max_length=511, verbose_name='Active')),
                ('base_address', models.CharField(max_length=511, verbose_name='Base address')),
                ('base_name', models.CharField(max_length=511, verbose_name='Base name')),
                ('base_number', models.CharField(max_length=511, verbose_name='Base number')),
                ('base_telephone_number', models.CharField(max_length=511, verbose_name='Base telephone number')),
                ('base_type', models.CharField(max_length=511, verbose_name='Base type')),
                ('dmv_license_plate_number', models.CharField(max_length=511, verbose_name='DMV license plate number')),
                ('permit_license_number', models.CharField(blank=True, max_length=511, null=True, verbose_name='Permit license number')),
                ('license_type', models.CharField(max_length=511, verbose_name='License type')),
                ('name', models.CharField(max_length=511, verbose_name='Name')),
                ('reason', models.CharField(max_length=511, verbose_name='Reason')),
                ('vehicle_license_number', models.CharField(max_length=511, verbose_name='Vehicle license number')),
                ('vehicle_vin_number', models.CharField(max_length=511, verbose_name='Vehicle VIN number')),
                ('vehicle_year', models.PositiveIntegerField(verbose_name='Vehicle year')),
                ('website', models.CharField(blank=True, max_length=511, verbose_name='Website')),
                ('wheelchair_accessible', models.CharField(blank=True, max_length=511, null=True, verbose_name='Wheelchair accessible')),
                ('veh', models.CharField(blank=True, max_length=511, null=True, verbose_name='VEH')),
                ('certification_date', models.DateField(blank=True, null=True, verbose_name='Certification date')),
                ('hack_up_date', models.DateField(blank=True, null=True, verbose_name='Hack up date')),
                ('expiration_date', models.DateField(verbose_name='Expiration date')),
                ('last_date_updated', models.DateField(verbose_name='Last date updated')),
                ('last_time_updated', models.TimeField(verbose_name='Last time updated')),
            ],
            options={
                'verbose_name': 'For Hire Vehicle',
                'verbose_name_plural': 'For Hire Vehicles',
            },
        ),
        migrations.CreateModel(
            name='ImportProcessLogTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified date')),
                ('process_status', models.CharField(choices=[('done', 'Done'), ('processing', 'Processing'), ('error', 'Error')], default='processing', max_length=100)),
                ('dataset_name', models.CharField(max_length=511, verbose_name='Dataset name')),
                ('summary', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Summary')),
                ('call_args', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Call args')),
                ('last_traceback', models.TextField(default='', null=True, verbose_name='Last Traceback')),
            ],
            options={
                'verbose_name': 'Import process log task',
                'verbose_name_plural': 'Import process log tasks',
            },
        ),
        migrations.CreateModel(
            name='MedallionDriver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified date')),
                ('raw_hash', models.CharField(db_index=True, editable=False, max_length=32)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Raw data')),
                ('expiration_date', models.DateField(verbose_name='Expiration date')),
                ('last_updated_date', models.DateField(verbose_name='Last updated date')),
                ('last_updated_time', models.TimeField(verbose_name='Last updated time')),
                ('license_number', models.CharField(max_length=511, verbose_name='License number')),
                ('name', models.CharField(max_length=511, verbose_name='Name')),
                ('type', models.CharField(max_length=511, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Medallion Drivers',
                'verbose_name_plural': 'Medallion Drivers',
            },
        ),
        migrations.CreateModel(
            name='VehicleInsuranceInformation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified date')),
                ('raw_hash', models.CharField(db_index=True, editable=False, max_length=32)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Raw data')),
                ('tlc_license_type', models.CharField(max_length=511, verbose_name='TLC License type')),
                ('tlc_license_number', models.CharField(max_length=511, verbose_name='TLC License number')),
                ('dmv_plate', models.CharField(max_length=511, verbose_name='DMV plate')),
                ('vin', models.CharField(max_length=511, verbose_name='VIN')),
                ('automobile_insurance_code', models.CharField(max_length=511, verbose_name='Automobile insurance code')),
                ('automobile_insurance_name', models.CharField(max_length=511, verbose_name='Automobile insurance name')),
                ('automobile_insurance_policy_number', models.CharField(max_length=511, verbose_name='Automobile insurance policy number')),
                ('vehicle_owner_name', models.CharField(max_length=511, verbose_name='Vehicle owner name')),
                ('affiliated_base_or_taxi_agent_or_fleet_license_number', models.CharField(max_length=511, verbose_name='Affiliated base or taxi agent or fleet license number')),
            ],
            options={
                'verbose_name': 'Vehicle Insurance Information',
                'verbose_name_plural': 'Vehicles Insurance Information',
            },
        ),
        migrations.AddIndex(
            model_name='vehicleinsuranceinformation',
            index=models.Index(fields=['vin', 'tlc_license_number'], name='importer_ve_vin_a95ebf_idx'),
        ),
        migrations.AddIndex(
            model_name='medalliondriver',
            index=models.Index(fields=['name', 'license_number'], name='importer_me_name_fa23e9_idx'),
        ),
        migrations.AddIndex(
            model_name='forhirevehicle',
            index=models.Index(fields=['name', 'vehicle_license_number'], name='importer_fo_name_5fdcf1_idx'),
        ),
    ]
